#! /bin/bash

ADDRESS='0.0.0.0'
PORT='8080'

fatal () {
    echo '[Fatal]' "$@" >&2
}

#! /bin/bash

s="GET /foo.txt HTTP/1.1
Host: localhost:8080
User-Agent: curl/8.5.0
Accept: */*"



parse-request() {
    declare -gA REQ_INFO=()
    declare -gA REQ_HEADERS=()

    local state='status'
    local line
    while read -r line; do
        line=${line%$'\r'}
        case "$state" in
                'status')
                    # parse the status line
                    # "GET" /foo.txt HTTP/1.1"
                    local method path version
                    read -r method path version <<< "$line"
                    REQ_INFO[method]=$method
                    REQ_INFO[path]=$path
                    REQ_INFO[version]=$version
                    state='headers'
                    ;;
                'headers')
                    # parse the headers
                    if [[ -z $line ]]; then
                        # this doesn't support body parsing
                        break
                    fi
                    local key value
                    IFS=: read -r key value <<< "$line"
                    key=${key,,} 
                    value=${value# *}
                    REQ_HEADERS[$key]=$value
                    ;;
                'body')
                    fatal 'body parsing not supported'
                    ;;
        esac
    done
}

process-request() {
    local fd=$1

    parse-request <&"$fd"

    # validate request
    [[ ${REQ_INFO[version]} == 'HTTP/1.1' ]] || fatal 'unsupported HTTP version'
    [[ ${REQ_INFO[method]} == 'GET' ]] || fatal 'unsupported HTTP method'
    [[ ${REQ_INFO[path]} == /* ]] || fatal 'path must be absolute'

    echo "${REQ_INFO[method]} ${REQ_INFO[path]}"

    local path="${REQ_INFO[path]}"
    path=${path:1}
    if [[ -f $path ]]; then
        printf 'HTTP/1.1 200 OK\r\n' >&"$fd"
        printf 'Content-Type: text/plain\r\n' >&"$fd"
        printf '\r\n' >&"$fd"
        cat "$path" >&"$fd"
    else 
        printf 'HTTP/1.1 404 Not Found\r\n' >&"$fd"
        printf '\r\n' >&"$fd"
    fi
    exec {fd}>&-
}

main() {
    enable accept || fatal 'failed to load accept'
    echo "listening on http://$ADDRESS:$PORT"
    local fd ip
    while true; do
        accept -b "$ADDRESS" -v fd -r ip $PORT || fatal 'failed to read socket'
        process-request "$fd"
    done
}

main "$@"